name: Deploy Preview Workflow
on:
  push:
    branches:
      - main
  pull_request:

# The GITHUB_SHA is different between a push event and pull_request event
# I'm not sure if this works for a tag based ref
# This could break helm deploy if the branch name is too long or contains certain characters
env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  LATEST_SHA: ${{ github.ref == 'refs/heads/main' && github.sha || github.event.pull_request.head.sha }}

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.5'
      - name: Run Tests
        run: make test

  build-image:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - uses: actions/checkout@v4
      - id: get_short_sha
        run: echo "short_sha=$(git rev-parse --short ${{ env.LATEST_SHA }})" >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Image
        uses: docker/build-push-action@v6
        with:
          push: true
          # This uses a public dockerhub repository by default
          tags: alexgqq/preview-deploy-example-app:${{ steps.get_short_sha.outputs.short_sha }}
          build-args: |
            PROJECT_VERSION=0.0.1
            COMMIT_SHA=${{ env.LATEST_SHA }}

  deploy-preview:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: get_short_sha
        run: echo "short_sha=$(git rev-parse --short ${{ env.LATEST_SHA }})" >> $GITHUB_OUTPUT
      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
      - name: Install Kube Config and Helm
        run: |
          mkdir $HOME/.kube
          echo ${{ secrets.TS_K8S_CONFIG }} | base64 -d > $HOME/.kube/config
          curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      - name: Deploy Preview
        run: helm upgrade --install app-${{ env.BRANCH_NAME }} --set image.tag=${{ steps.get_short_sha.outputs.short_sha }} ./chart
